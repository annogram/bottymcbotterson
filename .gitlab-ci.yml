image: docker:latest

services:
  - docker:dind

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"
  CI_AWS_ECS_CLUSTER: "botty-mccluster"
  CI_AWS_ECS_SERVICE: "botty-mcservice"
  CI_AWS_ECS_TASK_DEFINITION: "first-run-task-definition"
  REPOSITORY_URL: 571275409555.dkr.ecr.ap-southeast-2.amazonaws.com/bottymcbotterson

cache: 
  paths:
    - .stack-root
    - .stack-work

stages:
  - build
  - publish
  - deploy

application_test_and_build:
  stage: build
  image: fpco/stack-build-small:lts-15.5
  script:
    - stack install --local-bin-path ./build --system-ghc
    - cp -R --verbose res ./build/
    - stack test
  artifacts:
    paths:
      - build/*
    expire_in: 1 week


docker_build:
  stage: publish
  dependencies:
    - application_test_and_build
  script:
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region ap-southeast-2)
    - docker build --no-cache -t $REPOSITORY_URL .
    - docker tag $REPOSITORY_URL $REPOSITORY_URL:$CI_COMMIT_REF_NAME
    - docker push $REPOSITORY_URL:$CI_COMMIT_REF_NAME

deploy_staging:
  stage: deploy
  dependencies:
    - docker_build
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws ecs register-task-definition --family first-run-task-definition --requires-compatibilities FARGATE --cpu 256 --memory 512 --cli-input-json file://aws/botty-task-definition.json --region ap-southeast-2
    - aws ecs update-service --cluster $CI_AWS_ECS_CLUSTER --service $CI_AWS_ECS_SERVICE --task-definition first-run-task-definition --region ap-southeast-2
  environment:
    name: production
  only:
    - master
    - 13-create-environments-for-deployment
  when: manual